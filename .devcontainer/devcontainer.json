{
	"name": "Docker from Docker",
	"dockerFile": "Dockerfile",
	"runArgs": ["--init"],
	"mounts": [ "source=/var/run/docker.sock,target=/var/run/docker-host.sock,type=bind" ],
	
	// Use this environment variable if you need to bind mount your local source code into a new container.
	"remoteEnv": {
		"LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}"
	},

	// Set *default* container specific settings.json values on container create.
	"settings": { 
		"terminal.integrated.shell.linux": "/bin/bash"
	},

	// Add the IDs of extensions you want installed when the container is created.
    "extensions": [
		"redhat.java",
		"redhat.vscode-yaml",
		"VisualStudioExptTeam.vscodeintellicode",
		"vscjava.vscode-java-debug",
		"vscjava.vscode-java-dependency",
		"vscjava.vscode-java-pack",
		"vscjava.vscode-java-test",
		"vscjava.vscode-maven",
		"vscjava.vscode-spring-boot-dashboard",
		"vscjava.vscode-spring-initializr",
		"ms-azuretools.vscode-docker",
		"ms-kubernetes-tools.vscode-kubernetes-tools"
	  ],
	
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [8080, 4503],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "docker --version",

	// Uncomment the next two lines to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.
	"overrideCommand": false,
	"remoteUser": "codespace"
}